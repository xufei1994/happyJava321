<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper

        PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd"
        >
<mapper namespace="note.dao.NoteDao">

    <select id="findNotesByNotebookId"
                     parameterType="string"
                     resultType="map">
    select
        cn_note_id as id,
        cn_note_title as title
    from
        cn_note
    where
        cn_notebook_id = #{notebookId} and
        cn_note_status_id = '1'
    order by
        cn_note_last_modify_time desc

</select>


    <select id="findDeleteNotesByUserId"
            parameterType="string"
            resultType="map">
    select
        cn_note_id as id,
        cn_note_title as title
    from
        cn_note
    where
        cn_user_id = #{userId} and
        cn_note_status_id = '0'
    order by
        cn_note_last_modify_time desc
</select>

    <select id="findNoteById"
            parameterType="string"
            resultType="note.entity.Note">
        select
        cn_note_id as id ,
        cn_notebook_id as notebookId,
        cn_user_id as userId,
        cn_note_status_id as  statusId,
        cn_note_type_id as typeId,
        cn_note_title as title,
        cn_note_body as body,
        cn_note_create_time as  creatTime,
        cn_note_last_modify_time as lastModifyTime
        from
        cn_note
        where
        cn_note_id=#{noteId}
    </select>

    <insert id="addNote"
            parameterType="note.entity.Note">
        insert into cn_note
        (cn_note_id,
        cn_notebook_id,
        cn_user_id,
         cn_note_status_id,
          cn_note_type_id,
          cn_note_title,
          cn_note_body,
          cn_note_create_time,
          cn_note_last_modify_time
        ) values
        (#{id},
        #{notebookId},
        #{userId},
        #{statusId},
        #{typeId},
        #{title},
        #{body},
        #{createTime},
        #{lastModifyTime}
        )
    </insert>

    <update id="updateNote"
            parameterType="note.entity.Note">
        update
        cn_note
        <set>
            <trim suffixOverrides=",">
                <if test="notebookId!=null">
                    cn_notebook_id=#{notebookId},
                </if>
                <if test="userId!=null">
                    cn_user_id=#{userId},
                </if>
                <if test="statusId!=null">
                    cn_note_status_id=#{statusId},
                </if>
                <if test="typeId!=null">
                    cn_note_type_id=#{typeId},
                </if>
                <if test="title!=null">
                    cn_note_title=#{title},
                </if>
                <if test="body!=null">
                    cn_note_body=#{body},
                </if>
                <if test="lastModifyTime != null">
                    cn_note_last_modify_time=#{lastModifyTime}
                </if>
            </trim>
        </set>
        where
        cn_note_id=#{id}
    </update>

  <delete id="deleteNoteById"
                   parameterType="string">
      delete from cn_note
      where
      cn_note_id=#{noteId}

  </delete>

    <delete id="deleteNotes">
      delete from cn_note
      where cn_note_id in
      <foreach collection="ids" item="id"
               open="(" separator="," close=")">
          #{id}
      </foreach>


  </delete>

    <!--trim去除多余的and-->
    <select id="findNotes" resultType="map">
        select
        cn_note_id as id,
        cn_note_title as title
        from
        cn_note
        <where>
            <trim suffixOverrides="and">
            <if test="userId !=null">
                cn_user_id = #{userId} and
            </if>
            <if test="notebookId != null">

               cn_notebook_id = #{notebookId} and
            </if>
            <if test="statusId!=null">
            cn_note_status_id = #{statusId}
            </if>
            </trim>
        </where>
        order by
        cn_note_last_modify_time desc
    </select>

</mapper>
